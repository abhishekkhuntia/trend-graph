{"version":3,"sources":["../../../../../src/app/trend-module/trend-graph/trend-graph.component.ts"],"names":[],"mappings":"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","file":"trend-graph.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\n\nimport { BaseLineModel } from '../models/baseLine.model';\nimport { DataSetModel } from '../models/dataset.model';\n\n\nexport class TrendGraphComponent implements OnInit {\n   tgraph: ElementRef;\n   data: Array<DataSetModel>;\n   baseline: BaseLineModel;\n  canvas: any;\n  ctx: any;\n  vertical_height_margin : number;\n  max_unit: number;\n  max_abs_value: number;\n  max_value: number;\n  min_value: number;\n  data_margin: number;\n  validateStatus: boolean;\n  gradient: any;\n  constructor() {\n   }\n\n  ngOnInit() {\n   this.validateStatus=false;\n   this.canvas = this.tgraph.nativeElement;\n   this.ctx = this.canvas.getContext('2d');\n   this.max_unit=this.max_abs_value=this.max_value=this.vertical_height_margin=this.data_margin=this.min_value=0;\n   this.baseline= this.baseline!= undefined ? new BaseLineModel(this.baseline): null;\n   this.data!=undefined ? this.validateGraphInput(this.data): console.error('GRAPH DATA IS >> UNDEFINED');\n   this.gradient='#484848';\n}\n  validateGraphInput(data: Array<DataSetModel>)\n  {\n    if(data.constructor==Array)\n    {\n      this.setDataMargin(data);\n      this.getMax(data);\n      this.drawGraph(data);\n      if(this.baseline!=null)\n      this.drawBaseline(this.baseline);   \n    }\n    else\n      console.error('!!GRAPH DATA NEEDS TO BE ARRAY OF DATASETS!!');\n  }\n  refreshData(data: Array<DataSetModel>)\n  {\n    this.data=data;\n    this.validateGraphInput(data);\n  }\n  setDataMargin(datasets: Array<DataSetModel>)\n  {\n    let maxLength=0;\n    datasets.forEach(e=>{\n      e.data.length > maxLength ? maxLength = e.data.length : maxLength = maxLength;\n    });\n    this.data_margin= ((this.ctx.canvas.width)/maxLength);\n  }\n  drawGraph(data)\n  {\n    console.log(\">> DRAW GRAPH >>\");\n    //-------SETTING GRAPH PARAMS-----------\n   if(this.max_abs_value>0)\n      this.vertical_height_margin= (this.ctx.canvas.height-20)/(this.max_abs_value);\n    else\n      this.vertical_height_margin= (this.ctx.canvas.height-20);\n    //--------------------------------------\n    let l=0;\n    let t=0;\n    data.forEach(d => {\n      let baseColor= d['borderColor'];\n      d.data.forEach((e,i) =>{\n        let s={};\n        s={\n          left: l,\n          top: this.calcHeight(e),\n          value: e\n        };\n        let en={};\n        l+=this.data_margin;\n        if((i+1)!==d.data.length)\n        {\n          en={\n            left: l,\n            top: this.calcHeight(d.data[i+1]),\n            value: d.data[i+1]\n          };\n        }\n        else\n        {\n          en=s;\n          this.plotCircle(en,baseColor);\n          l=0;\n        } \n        if(this.baseline!= null)\n        this.plotChart(s,en,baseColor,this.baseline.belowBaseLineColor,d.borderWidth);\n        else\n        this.plotChart(s,en,baseColor,baseColor,d.borderWidth);\n      });\n    });\n  }\n  plotChart(s,en,baseColor,belowColor,borderWidth)\n  {\n      // console.log('>> PLOTTING CHART >>');\n       let context= this.ctx;\n       let gS=1;\n        context.beginPath();\n        this.gradient = context.createLinearGradient(0, this.canvas.height, 0,0);\n        if(this.baseline!=null)\n        {\n          let topPos= this.calcHeight(this.baseline.yValue);\n          gS= 1-(topPos/this.canvas.height);\n        }\n        \n        try{\n            this.gradient.addColorStop(\"0\",belowColor);\n            this.gradient.addColorStop(gS,belowColor);\n            this.gradient.addColorStop(gS, baseColor);\n            this.gradient.addColorStop(\"1.00\", baseColor);\n            context.strokeStyle= this.gradient;\n            // console.log('ADD COLOR STOP WORKING >',this.gradient);\n        }\n        catch(e)\n        {\n            console.warn('Config Error>, error in processing the values');\n            this.gradient=baseColor;\n            context.strokeStyle= baseColor;\n        }\n\n        context.lineWidth = borderWidth;\n        // context.fillText(en['value'],en.left,en.top);\n        // console.log('START >',s,'> END >',en);\n        context.moveTo(s['left'],s['top']);\n        context.lineTo(en['left'],en['top']);\n        context.fillStyle=\"#f0f0f0\";\n        context.fill();\n\n        context.stroke();\n        // context.closePath();\n  }\n  plotCircle(point, color)\n  {\n    let c=this.ctx;\n    c.beginPath();\n    c.moveTo(c.left,c.top);\n    c.arc(point.left,point.top,2.5, 0, Math.PI * 2, true);\n    try{\n      c.strokeStyle= this.gradient;\n    }\n    catch(e)\n    {\n      c.strokeStyle= color;\n    }\n    c.fill();\n    c.stroke();\n    // c.closePath();\n  }\n  getMax(v)\n  {\n    let mT; // considering there is no negative value in the data\n    let mnT;\n\n       mT= this.max_value=v[0].data[0];\n       mnT=this.min_value=v[0].data[0];\n    v.forEach(d=>{\n      mnT=this.min_value;\n      mT=this.max_value;\n       d.data.forEach(i=>{\n                mT = i> mT ? i: mT;\n                mnT = i< mnT ? i: mnT; \n            });\n            this.min_value=mnT;\n            this.max_value=mT;\n        });\n        if(mnT<0 && mT>0)\n        {\n          this.max_abs_value= mT+Math.abs(mnT);\n        }\n        else if(mT<0)\n          this.max_abs_value= Math.abs(mnT);\n        else if(mT==0)\n          this.max_abs_value= Math.abs(mnT);\n        else if(mT>=0 && mnT>=0)\n          this.max_abs_value= mT;\n        this.min_value=mnT;\n        this.max_value= mT;\n        // console.log('MAX ABS VALUE >', this.max_abs_value,' > MAX DATA VALUE > ', this.max_value, ' > MIN DATA VALUE >',this.min_value);\n  }\n  calcHeight(v)\n  {\n    if(this.max_abs_value>0)\n    {\n      if(this.max_value <=0 && this.min_value>=0)\n      {\n        let relattr = this.max_value <=0 ? this.max_value : this.min_value;\n        return Math.floor(this.vertical_height_margin*(relattr - v +5));\n      }\n      else\n        return  Math.floor(this.vertical_height_margin*(this.max_value-v+5));\n    }\n    else\n      return Math.floor(this.vertical_height_margin);\n  }\n  drawBaseline(baseLine : BaseLineModel)\n  {\n    // console.log('DRAW-BASELINE >>', baseLine);\n    this.drawHorizontalLine(baseLine.yValue,baseLine.borderColor,baseLine.borderWidth);\n  }\n  drawHorizontalLine(yValue,color,lineWidth)\n  {\n    yValue= this.calcHeight(yValue);\n    this.ctx.beginPath();\n    this.ctx.moveTo(0,yValue);\n    this.ctx.lineTo(this.canvas.width,yValue);\n    this.ctx.lineWidth= lineWidth;\n    this.ctx.strokeStyle=color;\n    this.ctx.stroke();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'trend-graph',\n  template: '<canvas #tgraph class=\"gclass\"></canvas>',\n  styles: [`\n    .gclass{}\n  `],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tgraph': [{ type: ViewChild, args: ['tgraph', ] },],\n'data': [{ type: Input },],\n'baseline': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}